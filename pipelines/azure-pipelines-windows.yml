# Branches that trigger a build on commit
trigger:
- master

# Branches that trigger builds on PR
# TODO - enable
#pr:
#- master
jobs:
- job: Windows
  pool:
    name: Hosted VS2017
    demands: Cmd
  strategy:
    # TODO: add validation parser and xerces debug if needed.
    matrix:
      debug_32:
        _arguments: x86 -d
        _artifact: WIN32chk
        _configuration: debug
      debug_64:
        _arguments: x64 -d
        _artifact: WIN32-x64chk
        _configuration: debug
      release_32:
        _arguments: x86
        _artifact: WIN32
        _configuration: release
      release_64:
        _arguments: x64
        _artifact: WIN32-x64
        _configuration: release
      release_32_validation_parser:
        _arguments: x86 --validation-parser
        _artifact: WIN32ValidationParser
        _configuration: release
      release_64_validation_parser:
        _arguments: x64 --validation-parser
        _artifact: WIN32-x64ValidationParser
        _configuration: release
      release_32_xerces:
        _arguments: x86 --parser-xerces
        _artifact: WIN32Xerces
        _configuration: release
      release_64_xerces:
        _arguments: x64 --parser-xerces
        _artifact: WIN32-x64Xerces
        _configuration: release

  steps:
  - task: BatchScript@1
    displayName: Build $(_artifact)
    inputs:
      filename: makewin.cmd
      arguments: $(_arguments)
      failOnStandardError: true
    condition: always()

  - task: PowerShell@2
    displayName: Windows BVTs
    inputs:
      targetType: filePath
      filePath: ./test\Win32\Win32.ps1
      failOnStderr: true
      workingDirectory: test\Win32
    condition: and(succeeded(), eq($(_configuration), 'release'))

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: .vs
      Contents: |
        src\msix\AppxPackaging.hpp
        src\msix\MSIXWindows.hpp
        src\msix\MsixErrors.hpp
        bin\makemsix.*
        bin\*.dll
        lib\msix.lib
        Package.nuspec
        build\**
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: succeeded()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact $(_artifact)'
    inputs:
      ArtifactName: $(_artifact)
    condition: succeeded()
